upstream miracle {
    server unix:///miracle/socket/uwsgi.sock;
}

# redirect http traffic to 
server {
    listen      80;
    server_name miracle.comses.net; # substitute your machine's IP address or FQDN
    return      301 https://$server_name$request_uri;
}

server {
    listen      443;
    charset     utf-8;

    ssl                  on;
    ssl_certificate      ssl/server.crt;
    ssl_certificate_key  ssl/server.key;

    ssl_session_timeout  5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_dhparam ssl/dhparam.pem;

    add_header Strict-Transport-Security max-age=63072000;
    add_header X-Content-Type-Options nosniff;
    #
    # max upload size
    client_max_body_size 75M;   # adjust to taste

    location /static {
        alias /miracle/static;
    }

    location /archives {
# FIXME: this provides no access control beyond hard-guessability of the hash. If the URL is shared, it is essentially
# public
        alias /miracle/archives;
    }

    location /robots.txt {
        alias /miracle/static/robots.txt;
    }

    location /radiant {
        proxy_pass http://radiant:3838/base;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;
    }
    location /apps {
        proxy_pass http://radiant:3838/miracle;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;
    }
    #
    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  miracle;
        include     /etc/nginx/uwsgi_params;
    }

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
}
