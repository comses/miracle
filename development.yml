version: '2'

services:
  deployr:
    image: comses/miracle-deployr
    volumes:
      - ./deploy/deployr:/opt/deployr
      - projects:/miracle/projects
      - packrat:/miracle/packrat
    environment:
      #### Variables below are used in deployr/addUser.py line 21
      DEPLOYR_USER: miracle
    ports:
      - "127.0.0.1:8000:8000"
  radiant:
    image: comses/miracle-radiant
    volumes:
      - projects:/miracle/projects
      - packrat:/miracle/packrat
    links:
      - db
    ports:
      - "127.0.0.1:3838:3838"
  #### Change radiant-mod:/srv/shiny-server/base/tools/data/manage_ui.R line 457
  #### Only need a read_only user for the `miracle_metadata` database
  redis:
    image: redis:3-alpine
    volumes:
      - redisdata:/data
  db:
    image: postgres:9.5
    volumes:
      - data:/var/lib/postgresql/data
      - ./deploy/db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    environment:
      POSTGRES_DB: 'miracle_metadata'
  django:
    build:
      context: ./django
      args:
        reqfile: "local.txt"
    volumes:
      - .:/code
      - projects:/miracle/projects
      - packrat:/miracle/packrat
      - static:/miracle/static
      - archives:/miracle/archives
      - socket:/miracle/socket
      - ./logs:/miracle/logs
    environment:
      #### IMPORTANT: Change settings/local.py file for deployr and postgres db passwords
      #### Default MIRACLE_USER is a Django admin user
      DEPLOYR_USER: miracle
      DEPLOYR_HOST: deployr
      DEPLOYR_URL: 'http://deployr:8000/deployr'
      MIRACLE_USER:  admin
      MIRACLE_EMAIL: "miracle@comses.net"
      RADIANT_URL: '/radiant/'
    ports:
      - "8080:8000"
    links:
      - db
      - radiant
      - deployr
      - redis
    command: /code/deploy/docker/dev.sh

  nginx:
    image: nginx:alpine
    volumes:
      - socket:/miracle/socket
      - static:/miracle/static
      - archives:/miracle/archives
      - logs:/var/log
      - ./deploy/nginx/miracle.conf:/etc/nginx/conf.d/miracle.conf
    ports:
      - "80:80"
      - "443:443"
    links:
      - django

volumes:
  redisdata:
    driver: local
  data:
    driver: local
  projects:
    driver: local
  packrat:
    driver: local
  static:
    driver: local
  archives:
    driver: local
  logs:
    driver: local
  socket:
    driver: local
